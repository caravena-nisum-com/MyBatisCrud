<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.caravena.mybatisdemo.mappers.UserMapper">

  <select id="getUserById" parameterType="int" resultType="com.caravena.mybatisdemo.domain.User">
     SELECT 
      id_user as userId, 
      id_email as emailId , 
      password, 
      first_name as firstName, 
      last_name as lastName
     FROM USERS 
     WHERE ID_USER = #{userId}
  </select>
  <!-- Instead of referencing Fully Qualified Class Names we can register Aliases in mybatis-config.xml and use Alias names. -->
   <resultMap type="User" id="UserResult">
    <id property="userId" column="id_user"/>
    <result property="emailId" column="id_email"/>
    <result property="password" column="password"/>
    <result property="firstName" column="first_name"/>
    <result property="lastName" column="last_name"/>   
   </resultMap>
  
  <select id="getAllUsers" resultMap="UserResult">
   SELECT * FROM USERS
  </select>
  
  <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
   INSERT INTO USERS(id_email, password, first_name, last_name)
    VALUES(#{emailId}, #{password}, #{firstName}, #{lastName})
  </insert>
  
  <update id="updateUser" parameterType="User">
    UPDATE USERS 
    SET
     PASSWORD= #{password},
     FIRST_NAME = #{firstName},
     LAST_NAME = #{lastName}
    WHERE ID_USER = #{userId}
  </update>
  
  <delete id="deleteUser" parameterType="int">
    DELETE FROM USERS WHERE ID_USER = #{userId}
  </delete>
  
</mapper>
